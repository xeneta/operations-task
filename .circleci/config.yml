version: 2

dev: &dev_only
  filters:
    branches:
      only:
        - master

jobs:

  plan-apply:
    working_directory: ~/operations-task/aws
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout:
          path: ~/operations-task
      - run:
          name: terraform init & plan
          command: |
            terraform init -var TF_VAR_accountid=${ACCOUNTID} -var TF_VAR_s3_state_bucket=${STATE_BUCKET}
            terraform plan -out tfapply -var TF_VAR_accountid=${STATE_BUCKET} -var TF_VAR_s3_state_bucket=${STATE_BUCKET}
      - persist_to_workspace:
          root: .
          paths:
            - .
  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  plan-destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            terraform plan -destroy -out tfdestroy -var TF_VAR_accountid=${ACCOUNTID} -var TF_VAR_s3_state_bucket=${STATE_BUCKET}
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            terraform apply -auto-approve tfdestroy
    
  build-and-push-image:
    working_directory: ~/operations-task/
    docker:
      - image: circleci/python:3.10.0
    steps:
      - checkout
      - setup_remote_docker          
      - run:
          name: docker build && push
          command: |
            pip install awscli
            make ecr-api
      - run:
          name: update ecs service
          command: aws ecs update-service --cluster dev-cluster --service app --force-new-deployment --region eu-west-2
      - persist_to_workspace:
          root: .
          paths:
            - .

workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply:
          <<: *dev_only
      - hold-apply:
          <<: *dev_only      
          type: approval
          requires:
            - plan-apply
      - apply:
          <<: *dev_only      
          requires:
            - hold-apply
      - plan-destroy:
          <<: *dev_only      
          requires:
            - apply
      - hold-destroy:
          <<: *dev_only      
          type: approval
          requires:
            - plan-destroy
      - destroy:
          <<: *dev_only      
          requires:
            - hold-destroy
      - hold-build-and-push-image:
          <<: *dev_only
          type: approval           
      - build-and-push-image:
          <<: *dev_only          
          requires:
            - hold-build-and-push-image
